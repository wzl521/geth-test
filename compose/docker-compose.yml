version: "3"
services:
  geth:
    image: srt180/geth:v1.11
    #image: ethereum/client-go:latest
    container_name: geth
    command: --datadir /opt/geth -nat extip:${GETH_EXTERNAL_IP} --port=20277 --http  --http.api eth,net,web3 --ws --ws.api eth,net,web3 --cache 4096 --pprof --pprof.addr 0.0.0.0 --metrics --metrics.expensive -trackserver -maxpeers=192 --metrics.influxdb --metrics.influxdb.endpoint ${INFLUXDB_URL} --metrics.influxdb.username ${INFLUX_USER} --metrics.influxdb.password ${INFLUX_USER_PASSWORD}
    hostname: geth
    restart: always
    ports:
      - "20277:20277/tcp"
      - "20277:20277/udp"
      - "8545:8545"
      - "6060:6060"
    volumes:
      - ${GETH_DATA_DIR}:/opt/geth
    logging:
      driver: "json-file"
      options:
        max-size: "5g"

  beacon-node:
    image: srt180/prysm:latest
    container_name: beacon-node
    command: --datadir=/data --rpc-host=0.0.0.0 --grpc-gateway-host=0.0.0.0 --monitoring-host=0.0.0.0 --execution-endpoint=/opt/geth/geth.ipc --accept-terms-of-use --trackserver
    hostname: beacon-node
    restart: always
    ports:
      - "4000:4000"
      - "13000:13000"
      - "12000:12000/udp"
    volumes:
      - ${BEACON_DATA_DIR}:/data
      - ${GETH_DATA_DIR}:/opt/geth

  geth-track:
    image: srt180/geth-track:v1.11
    container_name: geth-track
    hostname: geth-track
    restart: always
    command: -geth_rpc="/opt/geth/geth.ipc" -geth="passthrough:///unix:///opt/geth/track.sock" -prysm="passthrough:///unix:///opt/geth/beacon_track.sock"  -mongodb_uri=${GETH_MONGO_URI} -redis_addr="redis:6379" --streamcube_urls=${STREAM_CUBE_URIS} -db_tx_expire_days=21 -batch=50 -metrics  -kafka -kafka.addr="kafka:9092" --batch 500
    ports:
      - "16060:16060"
    volumes:
      - ${GETH_DATA_DIR}:/opt/geth
    logging:
      driver: "json-file"
      options:
        max-size: "5g"
    depends_on:
      - geth
      - mongodb
      - redis

  streamcube_api:
    image: srt180/streamcube_api:latest
    container_name: streamcube_api
    hostname: streamcube_api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ETH_CRAWLER=${CRAWLER_HASH}
      - SINKNQUERY_URL=http://sinknquery:8080
      - MONGO_HOST=mongo
      - MONGO_URL=${GETH_MONGO_URI}

  redis:
    image: redis:latest
    container_name: redis
    command: --notify-keyspace-events KEA
    hostname: redis
    restart: always
    volumes:
      - ${REDIS_DATA_DIR}:/data
    ports:
      - "6379:6379" #看情况暴露端口


  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  impfda:
    #image: 10.100.1.228:5000/zdyjy/impfda
    image: 123.157.235.202:5000/zdyjy/dev-eth-btc:latest
    container_name: impfda
    hostname: impfda
    restart: always
    ports:
      - "8180:80"


  mongodb:
    image: mongo
    restart: always
    container_name: mongo
    hostname: mongo
    ports:
      - "27017:27017" #看情况暴露端口
    volumes:
      - ${MONGODB_DIR}/data:/data/db
      - ${MONGODB_DIR}/backup:/data/backup
      - ${MONGODB_DIR}/conf:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

  # flink stuff
  jobmanager:
    hostname: jobmanager
    image: flink:1.15.1
    ports:
      - "9181:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        env.java.opts.jobmanager: -Duser.timezone=GMT+08
      - TZ=Asia/Shanghai

  taskmanager:
    image: flink:1.15.1
    depends_on:
      - jobmanager
    command: taskmanager
    ports:
      - "9069:9069"
    restart: always
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 18
        env.java.opts.taskmanager: -Duser.timezone=Asia/Shanghai

  zookeeper:
    image: zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ${ZOOKEEPER_DATA_DIR}:/var/lib/zookeeper
  kafka:
    image: bitnami/kafka
    hostname: kafka
    ports:
      - "9092:9092" # for inner docker bridge network
      - "9093:9093" # for exposed outer network(dev purpose)
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=CLIENT://kafka:9092,EXTERNAL://0.0.0.0:9093                           # address binding
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://${KAFKA_ADVERTISED_IP}:9093  # metadata response
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT  # protocol mapping
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    volumes:
      - ${KAFKA_DATA_DIR}:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9180:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafka
  sinknquery:
    image: srt180/sinknquery
    container_name: sinknquery
    command: -mongodb_uri ${GETH_MONGO_URI} -kafka.addr kafka:9092
    ports:
      - "9080:8080"
  flinkTaskStarter:
    image: srt180/flinktaskstarter:latest
    volumes:
      - ${FLINK_STARTER_DIR}:/opt/flink
    command: -w
    depends_on:
      - jobmanager
      - taskmanager
